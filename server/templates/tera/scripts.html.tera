<script src="/static/scripts/jquery-3.6.3.min.js"></script>
<script src="/static/scripts/bootstrap.bundle.js"></script>
<script lang="js">
    const pageForObject = $('meta[name=objecttype]').attr('content');

    const idPlaceholder = "${id}";

    const createorupdatePrefix = "createorupdate-" + pageForObject + "-button";
    const createorupdateFormId = "createorupdate-" + pageForObject + "-form";
    const editPrefix = "edit-" + pageForObject + "-button-";
    const editUrl = "/edit" + pageForObject + "/" + idPlaceholder;
    const deletePrefix = "delete-" + pageForObject + "-button-";
    const deleteUrl = "/delete" + pageForObject + "/" + idPlaceholder;

    const navPrefix = "nav-";

    $("[id^=" + editPrefix + "]").on("click", function (e) { editObject(e); });
    $("[id^=" + deletePrefix + "]").on("click", function (e) { deleteObject(e); });
    $("[id^=" + createorupdatePrefix + "]").on("click", function (e) { saveObject(); });
    $("[id^=nav-]").on("click", function (e) { showContent(e); });
    $("[id=generate-pdf-button]").on("click", function (e) { generatePDF(); });
    $("[id=send-projectlist-button]").on("click", function (e) { pushprojectlist(); });

    $(window).on('load', function () {
        handleActiveNavElement();
    });

    function generatePDF() {
        location.replace('/generate_pdf_projectlist');
    }

    function pushprojectlist() {
        location.replace('/pushprojectlist');
    }

    function editObject(e) {
        var objectId = e.target.id.replace(editPrefix, "");
        var url = editUrl.replace(idPlaceholder, objectId);

        location.replace(url);
    }

    function deleteObject(e) {
        var objectId = e.target.id.replace(deletePrefix, "");
        var url = deleteUrl.replace(idPlaceholder, objectId);

        if (confirm("Are you sure you want to delete this entry?")) {
            $.get(url, function (ret_data) {
                location.reload();
            });
        }
    }

    function saveObject() {
        var form = $("[id=" + createorupdateFormId + "]");
        if (form[0].checkValidity()) {

            // workaround - Actix / Serde from Rust doesn't seem to be able to handle mutli selections in option elements
            // even with [] notation, it doesn't work with multiple values
            // we copy the multi selection select value to a hidden field with the same name but without the brackets
            $("#" + form.attr("id") + " select").each(
                function (index) {
                    var input = $(this);
                    var multiSelectname = input.attr("name");
                    if (multiSelectname.endsWith("[]")) {
                        var hiddenName = multiSelectname.replace("[]", "");
                        var hiddenField = $('input[name="' + hiddenName + '"]');
                        if (hiddenField != undefined) {
                            hiddenField.val(input.val());
                        }
                    }
                }
            );

            form.submit();
        }
        else {
            event.preventDefault();
            event.stopPropagation();

            form.addClass('was-validated')
        }
    }

    function showContent(e) {
        var navId = e.target.id.replace(navPrefix, "");
        var url = "/list" + navId;

        location.assign(url);
    }

    function handleActiveNavElement(e) {
        let navId = pageForObject;

        $("[id^=nav-]").removeClass("active");
        $("[id^=nav-" + navId + "]").addClass("active");
    }


</script>